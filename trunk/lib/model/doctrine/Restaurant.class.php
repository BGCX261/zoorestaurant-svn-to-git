<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Restaurant extends BaseRestaurant
{
	
private static $instance;

	/**
	 * Return the only instance of Restaurant.
	 * If it's not alredy loaded, bring it from the DB.
	 *
	 * @return LaboratorySystem
	 */
	public static function getInstance() {
		if (is_null(self::$instance)) {
			$query = Doctrine_Query::create()
				->from("Restaurant r")
				->where("r.id = 1");
			$list = $query->execute();
			if (count($list) > 0) {
				self::$instance = $list[0];
			}
		}
		return self::$instance;
	}

	/**
	 * Used for testing purpose
	 * @param Restaurant $restaurant
	 */
	public static function setInstance($restaurant) {
		self::$instance = $restaurant;
	}
	
	/**
	 * Resets the singleton instance
	 *
	 */
	public static function reset() {
		self::$instance = null;
	}
	
	
	/**
	 * agrega una mesa al restaurant
	 * @param Mesa $mesa
	 */
	public function agregarMesa($mesa) {
		$this->Mesas->add($mesa);
	}
	
	/**
	 * devuelve todas las mesas
	 * @return Doctrine_Collection
	 */
	public function mesas() {
		return new SearchableReadonlyCollection($this->Mesas);
	}
	
	/**
	 * agrega un mozo al restaurant
	 * @param Mozo $mozo
	 */
	public function agregarMozo($mozo) {
		$this->Mozos->add($mozo);
	}
	
	/**
	 * devuelve todas los mozos
	 * @return Doctrine_Collection
	 */
	public function mozos() {
		return new SearchableReadonlyCollection($this->Mozos);
	}
	
	/**
	 * agrega un producto al restaurant
	 * @param Producto $producto
	 */
	public function agregarProducto($producto) {
		$this->Productos->add($producto);
	}
	
	/**
	 * devuelve todos los productos
	 * @return Doctrine_Collection
	 */
	public function productos() {
		return new SearchableReadonlyCollection($this->Productos);
	}
	
	/**
	 * devuelve todos los estados de las mesas
	 */
	public function estadosMesa() {
		return new SearchableReadonlyCollection($this->MesaEstados);
	}
	
	/**
	 * devuelve todos los estados de la caja
	 */
	public function estadosCaja() {
		return new SearchableReadonlyCollection($this->CajaEstados);
	}
	
	/**
	 * devuelve todos los estados de los pedidos
	 */
	public function estadosPedido() {
		return new SearchableReadonlyCollection($this->PedidoEstados);
	}
	
	public function buscarProductoPorId($idProducto) {
		$query = Doctrine_Query::create()
			->from('Producto')
			->where('id = ?', array($idProducto));
		$list = $query->execute();
		if (isset($list[0])) {
			return $list[0];
		}
		return null;
	}
	
	public function buscarMesaPorId($idMesa) {
		$query = Doctrine_Query::create()
			->from('Mesa')
			->where('id = ?', array($idMesa));
		$list = $query->execute();
		if (isset($list[0])) {
			return $list[0];
		}
		return null;
	}
	
	public function buscarMesaPorNumero($numero) {
		$query = Doctrine_Query::create()
			->from('Mesa')
			->where('numero = ?', array($numero));
		$list = $query->execute();
		if (isset($list[0])) {
			return $list[0];
		}
		return null;
	}
	
	public function buscarMozoPorId($idMozo) {
		$query = Doctrine_Query::create()
			->from('Mozo')
			->where('id = ?', array($idMozo));
		$list = $query->execute();
		if (isset($list[0])) {
			return $list[0];
		}
		return null;
	}
	
	public function buscarPedidoPorNumero($numero) {
		$query = Doctrine_Query::create()
			->from('Pedido')
			->where('numero = ?', array($numero));
		$list = $query->execute();
		if (isset($list[0])) {
			return $list[0];
		}
		return null;
	}
	
	/**
	 * devuelve todas los pedidos
	 * @return SearchableReadonlyCollection
	 */
	public function pedidos() {
		return new SearchableReadonlyCollection($this->Pedidos);
	}
	
	/**
	 * agrega un pedido al restaurant
	 * @param Pedido $pedido
	 */
	public function agregarPedido($pedido) {
		$this->Pedidos->add($pedido);
	}
	
	
}